- name: This play ensures environment is set up for cluster creation
  hosts: vm_host
  vars_files:
    - vars/k8s_cluster.yml
  tasks:
    - name: Ensure cluster folder exists
      file:
        path: "clusters/{{ k8s.cluster_name }}"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}" 
        mode: 0755

    - name: Ensure pivot tmp folder exists
      file:
        path: "/tmp/{{ k8s.cluster_name }}"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0755

    - name: Populate cluster folder with terraform files
      copy:
        src: "files/terraform/"
        dest: "clusters/{{ k8s.cluster_name }}"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0755

    - name: Snapshot cluster configuration for further use
      copy:
        src: "vars/k8s_cluster.yml"
        dest: "clusters/{{ k8s.cluster_name }}/"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0755

    - name: Ensure helm is installed
      unarchive:
        src: "{{ helm.helm_installer }}"
        dest: /tmp/
        remote_src: true

    - name: Install helm in PATH
      copy:
        src: /tmp/linux-amd64/helm
        dest: /usr/local/bin/
        remote_src: true
        mode: +x
      become: true

    - name: Install Helm Diff
      kubernetes.core.helm_plugin:
        state: present
        plugin_path: https://github.com/databus23/helm-diff

    - name: remove directory
      file:
        path: /tmp/linux-amd64
        state: absent

    - name: Ensure needed pip packages are present
      pip:
        executable: pip3
        name: "{{ item }}"
      loop: 
        - PyYAML
        - kubernetes
        - jsonpatch

    - name: Retrieve the minor version
      set_fact:
        kubernetes_version: "{{ k8s.cluster_version.split('.') }}"

    - name: Create ssh keypair
      openssh_keypair:
        path: "clusters/{{ k8s.cluster_name }}/id_rsa"

    - name: Download CentOS image
      get_url:
        url: "{{ centos.cloud_image }}"
        dest: /tmp/{{ image_name }}.qcow2
        mode: 0777
      when: k8s.cluster_os == 'CentOS'

    - name: Download Ubuntu image
      get_url:
        url: "{{ ubuntu_jammy.cloud_image if kubernetes_version.1 | int > 20 else ubuntu.cloud_image }}"
        dest: /tmp/{{ image_name }}.qcow2
        mode: 0777
      when: k8s.cluster_os == 'Ubuntu'

